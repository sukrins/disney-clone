{"version":3,"sources":["features/user/userSlice.js","firebase.js","components/Header.js","components/ImgSlider.js","components/Viewers.js","features/movie/movieSlice.js","components/Movies.js","components/Login.js","components/Home.js","components/Detail.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","email","photo","reducers","setUserLogin","state","action","payload","setSignOut","actions","selectUserName","user","selectUserPhoto","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","storage","Header","dispatch","useDispatch","history","useHistory","userName","useSelector","userPhoto","useEffect","onAuthStateChanged","a","displayName","photoURL","push","Nav","Logo","src","NavMenu","href","UserImg","onClick","signOut","then","LoginContainer","Login","signInWithPopup","result","styled","nav","img","div","ImgSlider","Carousel","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","Wrap","alt","Slider","Viewers","Container","autoPlay","loop","playsInline","muted","movieSlice","movies","setMovies","selectMovies","movie","Movies","Content","map","to","id","cardImg","LogoOne","SignUp","Description","LogoTwo","p","Home","collection","onSnapshot","snapshot","tempMovies","docs","doc","data","main","Detail","useParams","useState","setMovie","get","exists","Background","backgroundImg","ImgTitle","titleImg","Controls","PlayButton","TrailerButton","AddButton","GroupWatchButton","SubTitle","subTitle","description","button","App","className","path","store","configureStore","reducer","movieReducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd848429.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n    name: '',\n    email: '',\n    photo: ''\n}\n\nconst userSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        setUserLogin: (state, action) => {\n            state.name = action.payload.name;\n            state.email = action.payload.email;\n            state.photo = action.payload.photo;\n        },\n        setSignOut: (state) => {\n            state.name = null;\n            state.email = null;\n            state.photo = null;\n        }\n    }\n});\n\nexport const { setUserLogin, setSignOut } = userSlice.actions;\n\nexport const selectUserName = (state) => state.user.name;\nexport const selectUserEmail = (state) => state.user.email;\nexport const selectUserPhoto = (state) => state.user.photo;\n\nexport default userSlice.reducer;","import firebase from 'firebase';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyA9BnlX96fMf7XiUVCFRsoQzG8DGERJkeY\",\n    authDomain: \"disneyplus-clone-a33d5.firebaseapp.com\",\n    projectId: \"disneyplus-clone-a33d5\",\n    storageBucket: \"disneyplus-clone-a33d5.appspot.com\",\n    messagingSenderId: \"37918794208\",\n    appId: \"1:37918794208:web:dbe9842dfe1dda522a4b85\",\n    measurementId: \"G-DRVLJKWRWG\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\nconst storage = firebase.storage();\n\nexport { auth, provider, storage };\nexport default db;","import React, { useEffect } from 'react';\nimport styled from 'styled-components'\nimport { selectUserName, selectUserPhoto, setUserLogin, setSignOut } from '../features/user/userSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { auth, provider } from '../firebase';\nimport { useHistory } from 'react-router-dom'\n\n\nfunction Header() {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const userName = useSelector(selectUserName);\n    const userPhoto = useSelector(selectUserPhoto);\n\n    useEffect(() => {\n        auth.onAuthStateChanged(async (user) => {\n            if (user) {\n                dispatch(setUserLogin({\n                    name: user.displayName,\n                    email: user.email,\n                    photo: user.photoURL\n                }));\n                history.push('/');\n            }\n        })\n    }, [])\n\n    const signIn = () => {\n        auth.signInWithPopup(provider).then((result) => {\n            let user = result.user;\n            dispatch(setUserLogin({\n                name: user.displayName,\n                email: user.email,\n                photo: user.photoURL\n            }));\n            history.push('/');\n        })\n    }\n\n    const signOut = () => {\n        auth.signOut().then(() => {\n            dispatch(setSignOut());\n            history.push('/login');\n        })\n    }\n\n    return (\n        <Nav>\n            <Logo src=\"https://sukrins.github.io/disney-clone/images/logo.svg\" />\n            { !userName ? (\n                <LoginContainer>\n                    <Login onClick={signIn}>Login</Login>\n                </LoginContainer>\n            ) :\n                <>\n                    <NavMenu>\n                        <a href='/'>\n                            <img src=\"https://sukrins.github.io/disney-clone/images/home-icon.svg\" />\n                            <span>HOME</span>\n                        </a>\n                        <a>\n                            <img src=\"https://sukrins.github.io/disney-clone/images/search-icon.svg\" />\n                            <span>SEARCH</span>\n                        </a>\n                        <a>\n                            <img src=\"https://sukrins.github.io/disney-clone/images/watchlist-icon.svg\" />\n                            <span>WATCHLIST</span>\n                        </a>\n                        <a>\n                            <img src=\"https://sukrins.github.io/disney-clone/images/original-icon.svg\" />\n                            <span>ORIGINALS</span>\n                        </a>\n                        <a>\n                            <img src=\"https://sukrins.github.io/disney-clone/images/movie-icon.svg\" />\n                            <span>MOVIES</span>\n                        </a>\n                        <a>\n                            <img src=\"https://sukrins.github.io/disney-clone/images/series-icon.svg\" />\n                            <span>SERIES</span>\n                        </a>\n                    </NavMenu>\n                    <UserImg onClick={signOut} src={userPhoto} />\n                </>\n            }\n        </Nav>\n    )\n}\n\nexport default Header\n\nconst Nav = styled.nav`\n    height: 70px;\n    background: #090b13;\n    display: flex;\n    align-items: center;\n    padding: 0 36px;\n    overflow-x: hidden;\n    `\nconst Logo = styled.img`\n    width: 80px;\n    `\n\nconst NavMenu = styled.div`\n    display: flex;  \n    flex: 1;\n    margin-left: 25px;\n    align-items: center;\n    a {\n        display: flex;\n        align-items: center;\n        padding: 0 12px;\n        cursor: pointer;\n        color: inherit;\n        text-decoration:none;\n\n        img{\n            height: 20px;\n        }\n\n        span {\n            font-size: 13px;\n            letter-spacing: 1.42px;\n            position: relative;\n\n            &:after {\n                content: \"\";\n                height: 2px;\n                background: white;\n                position: absolute;\n                left: 0;\n                right: 0;\n                bottom: -6px;\n                opacity: 0;\n                transform: scaleX(0);\n                transform-origin: left center;\n                transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\n            }\n        }\n\n        &:hover {\n            span:after {\n                opacity: 1;\n                transform: scaleX(1);\n            }\n\n        }\n    }\n    `\n\nconst UserImg = styled.img`\n    width: 48px;\n    height: 48px;\n    border-radius: 50%;\n    cursor: pointer;\n\n`\n\nconst Login = styled.div`\n    border: 1px solid #f9f9f9;\n    padding: 8px 16px;\n    border-radius: 4px;\n    letter-spacing: 1.5px;\n    text-transform: uppercase;\n    background-color: rgba(0, 0, 0, 0.6);\n    transition: all 0.2s ease 0s;\n    cursor: pointer;\n\n    &:hover {\n        background-color: #f9f9f9;\n        color: #000;\n        border-color: transparent;\n    }\n`\n\nconst LoginContainer = styled.div`\n    flex: 1;\n    display: flex;\n    justify-content: flex-end;\n`","import React from 'react';\nimport styled from 'styled-components'\nimport Slider from 'react-slick';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nfunction ImgSlider() {\n    let settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        autoplay: true\n    }\n    return (\n        <Carousel {...settings}>\n            <Wrap>\n                <img src=\"https://sukrins.github.io/disney-clone/images/slider-badging.jpg\" alt=\"\" />\n            </Wrap>\n            <Wrap>\n                <img src=\"https://sukrins.github.io/disney-clone/images/slider-badag.jpg\" alt=\"\" />\n            </Wrap>\n        </Carousel>\n    )\n}\n\nexport default ImgSlider\n\nconst Carousel = styled(Slider)`\n    margin-top: 20px;\n\n    ul li button {\n        &:before {\n            font-size: 10px;\n            color: rgb(150, 158, 171);\n        }\n    }\n\n    li.slick-active button:before {\n        color: white;\n    }\n\n    .slick-list {\n        overflow: visible;\n    }\n\n    button {\n        z-index: 1;\n    }\n`\n\nconst Wrap = styled.div`\n    cursor: pointer;\n    img {\n        width: 100%;\n        height: 100%;\n        border-radius: 4px;\n        box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,\n        rgb(0 0 0 / 73%) 0px 16px 10px -10px;\n        border: 4px solid transparent;\n        transition-duration: 300ms;\n\n        &:hover {\n            border: 4px solid rgba(249, 249, 249, 0.8);\n        }\n    }\n`\n","import React from 'react'\nimport styled from 'styled-components';\n\nfunction Viewers() {\n    return (\n        <Container>\n            <Wrap>\n                <img src=\"https://sukrins.github.io/disney-clone/images/viewers-disney.png\" />\n                <video autoPlay={true} loop={true} playsInline={true} muted>\n                    <source src=\"https://sukrins.github.io/disney-clone/videos/1564674844-disney.mp4\" />\n                </video>\n            </Wrap>\n            <Wrap>\n                <img src=\"https://sukrins.github.io/disney-clone/images/viewers-pixar.png\" />\n                <video autoPlay={true} loop={true} playsInline={true} muted>\n                    <source src=\"https://sukrins.github.io/disney-clone/videos/1564676714-pixar.mp4\" />\n                </video>\n            </Wrap>\n            <Wrap>\n                <img src=\"https://sukrins.github.io/disney-clone/images/viewers-marvel.png\" />\n                <video autoPlay={true} loop={true} playsInline={true} muted>\n                    <source src=\"https://sukrins.github.io/disney-clone/videos/1564676115-marvel.mp4\" />\n                </video>\n            </Wrap>\n            <Wrap>\n                <img src=\"https://sukrins.github.io/disney-clone/images/viewers-starwars.png\" />\n                <video autoPlay={true} loop={true} playsInline={true} muted>\n                    <source src=\"https://sukrins.github.io/disney-clone/videos/1608229455-star-wars.mp4\" />\n                </video>\n            </Wrap>\n            <Wrap>\n                <img src=\"https://sukrins.github.io/disney-clone/images/viewers-national.png\" />\n                <video autoPlay={true} loop={true} playsInline={true} muted>\n                    <source src=\"https://sukrins.github.io/disney-clone/videos/1564676296-national-geographic.mp4\" />\n                </video>\n            </Wrap>\n        </Container>\n    )\n}\n\nexport default Viewers\n\nconst Container = styled.div`\n    margin-top: 30px;\n    padding: 30px 0px 26px;\n    display: grid;\n    grid-gap: 25px;\n    grid-template-columns: repeat(5, minmax(0, 1fr));\n\n    @media (max-width: 768px) {\n        grid-template-columns: repeat(5, minmax(0,1fr));\n    }\n`\n\nconst Wrap = styled.div`\n    border-radius: 10px;    \n    border: 3px solid rgba(249, 249, 249, 0.1);\n    cursor: pointer;\n    box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,\n    rgb(0 0 0 / 73%) 0px 16px 10px -10px;\n    transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\n    position: relative;\n    overflow: hidden;\n\n    img{\n        inset: 0px;\n        display: block;\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n        opacity: 1;\n        transition: opacity 500ms ease-in-out 0s;\n        z-index: 1;\n        top: 0;\n    }\n\n    video{\n        width: 100%;\n        height: 100%;\n        position: absolute;\n        top: 0px;\n        opacity: 0;\n        z-index: 0;\n    }\n\n    &:hover {\n        box-shadow: rgb(0 0 0 / 80%) 0px 40px 58px -16px,\n        rgb(0 0 0 / 72%) 0px 30px 22px -10px;\n        transform: scale(1.05);\n        border-color: rgba(249, 249, 249, 0.8);\n\n        video {\n            opacity: 1;\n        }\n    }\n`","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    movies: []\n}\n\nconst movieSlice = createSlice({\n    name: \"movie\",\n    initialState,\n    reducers: {\n        setMovies: (state, action) => {\n            state.movies = action.payload;\n        }\n    }\n})\n\nexport const { setMovies } = movieSlice.actions;\n\nexport const selectMovies = (state) => state.movie.movies;\n\nexport default movieSlice.reducer;","import React from 'react'\nimport styled from 'styled-components';\nimport { selectMovies } from '../features/movie/movieSlice';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nfunction Movies() {\n    const movies = useSelector(selectMovies);\n\n    return (\n        <Container>\n            <h4>Recommended For You</h4>\n            <Content>\n                {movies &&\n                    movies.map((movie) => (\n                        <Wrap key={movie.id}>\n                            <Link to={`/detail/${movie.id}`}>\n                                <img src={movie.cardImg} />\n                            </Link>\n                        </Wrap>\n                    ))\n                }\n            </Content>\n        </Container>\n    )\n}\n\nexport default Movies\n\nconst Container = styled.div`\n\n`\n\nconst Content = styled.div`\n    display: grid;\n    grid-gap: 25px;\n    grid-template-columns: repeat(4, minmax(0,1fr));\n`\n\nconst Wrap = styled.div`\n    border-radius: 10px;\n    overflow: hidden;\n    border: 3px solid rgba(249, 249, 249, 0.1);\n    cursor: pointer;\n    box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,\n    rgb(0 0 0 / 73%) 0px 16px 10px -10px;\n    transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\n    \n    img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n    }\n\n    &:hover {\n        transform: scale(1.05);\n        box-shadow: rgb(0 0 0 / 80%) 0px 40px 58px -16px,\n        rgb(0 0 0 / 72%) 0px 30px 22px -10px;\n        border-color: rgba(249, 249, 249, 0.8);\n    }\n\n`","import React from 'react'\nimport styled from 'styled-components';\n\nfunction Login() {\n    return (\n        <Container>\n            <Content>\n                <LogoOne src=\"https://sukrins.github.io/disney-clone/images/cta-logo-one.svg\" />\n                <SignUp>GET ALL THERE</SignUp>\n                <Description>\n                    Endless entertainment from Disney, Pixar, Marvel, Star Wars, and National Geographic. From new releases, to your favorite classics, the past, present, and future are yours. Shows: Beauty and the Beast, Moana, Aladdin, Mary Poppins, Pinocchio, Cinderella, Lion King.                </Description>\n                <LogoTwo src=\"https://sukrins.github.io/disney-clone/images/cta-logo-two.png\" />\n            </Content>\n        </Container>\n    )\n}\n\nexport default Login\n\nconst Container = styled.div`\n    position: relative;\n    height: calc(100vh - 70px);\n    display: flex;\n    align-items: top;\n    justify-content: center;\n\n    &:before {\n        position: absolute;\n        content: \"\";\n        top: 0;\n        bottom: 0;\n        right: 0;\n        left: 0;\n        background-position: top;\n        background-size: cover;\n        background-image: no-repeat;\n        background-image: url(\"https://sukrins.github.io/disney-clone/images/login-background.jpg\");\n        opacity: 0.7;\n        z-index: -1;\n    }\n`\n\nconst Content = styled.div`\n    max-width: 650px;\n    padding: 80px 40px;    \n    width: 80%;\n    display: flex;\n    flex-direction: column;\n    margin-top: 100px;\n    align-items: center;\n`\n\nconst LogoOne = styled.img``\n\nconst LogoTwo = styled.img`\n    width: 90%;\n`\n\nconst SignUp = styled.a`\n    width: 100%;\n    background-color: #0063e5;\n    font-weight: bold;\n    padding: 17px 0;\n    color: #f9f9f9;\n    border-radius: 4px;\n    text-align: center;\n    font-size: 18px;\n    cursor: pointer;\n    transition: all 250ms;\n    letter-spacing: 1.5px;\n    margin-top: 8px;\n    margin-bottom: 12px;\n\n    &:hover {\n        background: #0483ee;\n    }\n`\n\nconst Description = styled.p`\n    font-size: 11px;\n    letter-spacing: 1.5px;\n    text-align: center;\n    line-height: 1.5;\n`\n\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components'\nimport ImgSlider from './ImgSlider';\nimport Viewers from './Viewers';\nimport Movies from './Movies';\nimport db from '../firebase';\nimport { setMovies } from '../features/movie/movieSlice';\nimport { auth } from '../firebase';\nimport { selectUserName, setUserLogin } from '../features/user/userSlice';\nimport { useHistory } from 'react-router-dom'\nimport Login from './Login';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction Home() {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const userName = useSelector(selectUserName);\n\n    useEffect(() => {\n        db.collection('movies').onSnapshot((snapshot) => {\n            let tempMovies = snapshot.docs.map((doc) => {\n                return { id: doc.id, ...doc.data() }\n            });\n            dispatch(setMovies(tempMovies));\n        })\n    }, [])\n\n    useEffect(() => {\n        auth.onAuthStateChanged(async (user) => {\n            if (user) {\n                dispatch(setUserLogin({\n                    name: user.displayName,\n                    email: user.email,\n                    photo: user.photoURL\n                }));\n            } else {\n                history.push('/login');\n            }\n        })\n    }, [])\n    return (\n        <div>\n            { !userName ? (\n                <>\n                    <Login />\n                </>\n            ) :\n                <Container>\n\n                    <>\n                        <ImgSlider />\n                        <Viewers />\n                        <Movies />\n                    </>\n                </Container>\n            }\n        </div>\n    )\n}\n\nexport default Home\n\nconst Container = styled.main`\n    min-height: calc(100vh - 70px);\n    padding: 0 calc(3.5vw + 5px);\n    position: relative;\n    overflow-x: hidden;\n\n    &:before {\n        background: url(\"https://sukrins.github.io/disney-clone/images/home-background.png\") center center / cover no-repeat fixed;\n        content: \"\";\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        z-index: -1;\n    }\n`","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport db from '../firebase';\nimport { auth } from '../firebase';\nimport { selectUserName, setUserLogin } from '../features/user/userSlice';\nimport { useHistory } from 'react-router-dom'\nimport Login from './Login';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction Detail() {\n    const { id } = useParams();\n    const [movie, setMovie] = useState();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const userName = useSelector(selectUserName);\n\n    useEffect(() => {\n        db.collection('movies').doc(id).get().then((doc) => {\n            if (doc.exists) {\n                setMovie(doc.data());\n            } else {\n\n            }\n        })\n    }, [])\n\n    useEffect(() => {\n        auth.onAuthStateChanged(async (user) => {\n            if (user) {\n                dispatch(setUserLogin({\n                    name: user.displayName,\n                    email: user.email,\n                    photo: user.photoURL\n                }));\n            } else {\n                history.push('/login');\n            }\n        })\n    }, [])\n\n    return (\n        <div>\n            { !userName ? (\n                <>\n                    <Login />\n                </>\n            ) :\n                <Container>\n                    <Background>\n                        <img src={movie?.backgroundImg} />\n                    </Background>\n                    <ImgTitle>\n                        <img src={movie?.titleImg} />\n                    </ImgTitle>\n                    <Controls>\n                        <PlayButton>\n                            <img src=\"https://sukrins.github.io/disney-clone/images/play-icon-black.png\" />\n                            <span>PLAY</span>\n                        </PlayButton>\n                        <TrailerButton>\n                            <img src=\"https://sukrins.github.io/disney-clone/images/play-icon-white.png\" />\n                            <span>TRAILER</span>\n                        </TrailerButton>\n                        <AddButton>\n                            <span>+</span>\n                        </AddButton>\n                        <GroupWatchButton>\n                            <img src=\"https://sukrins.github.io/disney-clone/images/group-icon.png\" />\n                        </GroupWatchButton>\n                    </Controls>\n                    <SubTitle>\n                        {movie?.subTitle}\n                    </SubTitle>\n                    <Description>\n                        {movie?.description}\n                    </Description>\n                </Container>\n            }\n        </div>\n    )\n}\n\nexport default Detail\n\nconst Container = styled.div`\n    min-height: calc(100vh - 70px);\n    padding: 0 calc(3.5vw + 5px);\n    position: relative;\n`\n\nconst Background = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    z-index: -1;\n    opacity: 0.8;\n\n    img {\n        width: 100%\n        height: 100%;\n        object-fit: cover;\n    }\n`\nconst ImgTitle = styled.div`\n    height: 30vh;\n    width: 35vw;\n    min-height: 170px;\n    min-width: 200px;\n    margin-top: 40px;\n\n    img {\n        width: 100%;\n        height: 100%;\n        object-fit: contain;\n    }\n`\n\nconst Controls = styled.div`\n    display: flex;\n    align-items: center;\n    padding-top: 10px;\n`\n\nconst PlayButton = styled.button`\n    border-radius: 4px;\n    font-size: 15px;\n    padding: 0px 24px;\n    margin-right: 22px;\n    display: flex;\n    align-items: center;\n    height: 56px;\n    background: rgb(249, 249, 249);\n    border: none;\n    letter-spacing: 1.8px;\n    cursor: pointer;\n\n    &:hover {\n        background: rgb(198, 198, 198);\n\n    }\n`\n\nconst TrailerButton = styled(PlayButton)`\n    background: rgba(0, 0, 0, 0.3);\n    border: 1px solid rgb(249, 249, 249);\n    color: rgb(249, 249, 249);\n    text-transform: uppercase;\n`\n\nconst AddButton = styled.button`\n    margin-right: 16px;\n    height: 44px;\n    width: 44px;    \n    border-radius: 50%;\n    display: flex;\n    align-item: center;\n    justify-content: center;\n    border: 2px solid white;\n    background: rgba(0, 0, 0, 0.6);\n    cursor: pointer;\n\n    span {\n        font-size: 30px;\n        color: white;\n    }\n`\n\nconst GroupWatchButton = styled(AddButton)`\n    background: rgb(0, 0, 0);\n`\nconst SubTitle = styled.div`\n   color: rgb(249, 249, 249);\n   font-size: 15px;\n   min-height: 20px;\n   margin-top: 26px\n`\n\nconst Description = styled.div`\n    line-height: 1.4;\n    font-size: 20px;\n    margin-top: 16px;\n    color: rgb(249, 249, 249);\n    max-width: 760px;\n`","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Detail from './components/Detail';\nimport Login from './components/Login';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/detail/:id\">\n            <Detail />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport movieReducer from '../features/movie/movieSlice';\nimport userReducer from '../features/user/userSlice';\n\nexport const store = configureStore({\n    reducer: {\n        movie: movieReducer,\n        user: userReducer\n    },\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}